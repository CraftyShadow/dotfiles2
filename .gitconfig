[user]
	name = IvanTanev
	email = vankata.t@gmail.com
[color]
	branch = auto
	status = auto
	diff   = auto
	ui     = auto
[branch]
	autosetupmerge = true
[color "branch"]
	current = yellow reverse
	local   = yellow
	remote  = green
[color "diff"]
	meta	= yellow bold
	frag	= magenta bold
	old 	= red bold
	new 	= green bold
[color "status"]
	added	= yellow
	changed = green
	untracked = cyan

[core]
	whitespace=fix;-indent-with-non-tab,trailing-space,cr-at-eol
	autocrlf = input
	editor = vim

[alias]
    st 	= status -sb
    aa  = add --all
    ci	= commit
    co	= checkout
    df	= diff
    dfw	= diff --word-diff
    dc  = diff --cached
    dcw  = diff --cached --word-diff
    ig  =!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\t=> \\2/' | sort
    amend = commit --amend
    famend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend
    h   = !git head
    l   = "!source ~/.githelpers && pretty_git_log"
    la  = !git l --all
    r   = !git l -20
    ra  = !git r --all
    ff  = merge --ff-only
    pullff = pull --ff-only
    noff = merge --no-ff
    fp = fetch --prune
    po  = push origin
    pom = push origin master
    pod = push origin develop
    br	= branch
    tagdate = !git tag `date "+%Y%m%d%H%M"`
	
    # Show status and diff of dirty submodules
    subdiff = !"git submodule foreach --recursive --quiet '[ \"$(git status -s)\" ] && echo \"--- $name ---\" && git status -s && git diff --unified=1 || :'"

    # Pull all submodules
    subpull = !"git submodule foreach git pull"

    # Update all submodules
    subupdate = !"git submodule sync && git submodule update --init --recursive"

    # Checkout master branch of all submodules
    subcheckout = !"git submodule foreach git checkout master"

    # Reset all submodules
    subreset = !"git submodule foreach --recursive git checkout -- . && git submodule foreach --recursive git clean -f"

    # show list of contributors in descending order by number of commits
    rank = shortlog -sn --no-merges

    # given any git object, try to show it briefly
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

    # Search for a given string in all patches and print commit messages
    # example: search for any commit that adds or removes string "foobar"
    #     git searchcommits foobar
    # example: search commits for string "foobar" in directory src/lib
    #     git searchcommits foobar src/lib
    # example: search commits for "foobar", print full diff of commit with 1 line context
    #     git searchcommits foobar --pickaxe-all -U1 src/lib
    searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""

[gui]
	encoding = utf-8
[push]
	default = upstream
